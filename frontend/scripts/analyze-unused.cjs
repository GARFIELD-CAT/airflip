#!/usr/bin/env node

const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üîç –ê–Ω–∞–ª–∏–∑ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤ –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...\n');

const timestamp = new Date().toISOString().split('T')[0];
const reportPath = path.join(__dirname, '..', `unused-analysis-${timestamp}.md`);

let report = `# –ê–Ω–∞–ª–∏–∑ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º–æ–≥–æ –∫–æ–¥–∞ - ${timestamp}\n\n`;

// Function to run command and capture output
function runCommand(command, description) {
  try {
    console.log(`‚è≥ ${description}...`);
    const output = execSync(command, {
      cwd: path.join(__dirname, '..'),
      encoding: 'utf8',
      stdio: 'pipe'
    });
    console.log(`‚úÖ ${description} –∑–∞–≤–µ—Ä—à–µ–Ω`);
    return output;
  } catch (error) {
    console.log(`‚ö†Ô∏è  ${description} –∑–∞–≤–µ—Ä—à–µ–Ω —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏`);
    return error.stdout || error.message;
  }
}

// Run knip for files only
report += '## üóÇÔ∏è –ù–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Ñ–∞–π–ª—ã (knip)\n\n';
const knipFiles = runCommand('yarn knip --include files', '–ü–æ–∏—Å–∫ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤');
report += '```\n' + knipFiles + '\n```\n\n';

// Run knip for dependencies only  
report += '## üì¶ –ù–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ (knip)\n\n';
const knipDeps = runCommand('yarn knip --include dependencies', '–ü–æ–∏—Å–∫ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π');
report += '```\n' + knipDeps + '\n```\n\n';

// Run depcheck
report += '## üîç –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π (depcheck)\n\n';
const depcheck = runCommand('yarn depcheck', '–ê–Ω–∞–ª–∏–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —á–µ—Ä–µ–∑ depcheck');
report += '```\n' + depcheck + '\n```\n\n';

// Run ts-unused-exports (first 50 lines to avoid huge output)
report += '## üì§ –ù–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —ç–∫—Å–ø–æ—Ä—Ç—ã (ts-unused-exports)\n\n';
const tsUnused = runCommand('yarn ts-unused-exports tsconfig.json | head -50', '–ü–æ–∏—Å–∫ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö —ç–∫—Å–ø–æ—Ä—Ç–æ–≤');
report += '```\n' + tsUnused + '\n```\n\n';

report += '## üìä –°–≤–æ–¥–∫–∞\n\n';
report += '- –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ: ' + timestamp + '\n';
report += '- –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã: knip, depcheck, ts-unused-exports\n';
report += '- –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–∞–∂–¥—ã–π —Ñ–∞–π–ª/–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º\n\n';

report += '## ‚ö†Ô∏è –í–∞–∂–Ω–æ\n\n';
report += '1. –ù–µ —É–¥–∞–ª—è–π—Ç–µ —Ñ–∞–π–ª—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏\n';
report += '2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ –∏–º–ø–æ—Ä—Ç—ã\n';
report += '3. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π\n';

// Write report
fs.writeFileSync(reportPath, report);

console.log(`\nüìÑ –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: ${reportPath}`);
console.log('üéâ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω!'); 